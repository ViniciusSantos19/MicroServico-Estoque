version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./Nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - my-network
    depends_on:
      - estoque
      - db

  db:
    image: postgres:14.2-alpine
    container_name: myapp-postgres-14.2
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c 'max_connections=500'
    environment:
      POSTGRES_DB: microservico_estoque_development
      POSTGRES_USER: vinicius
      POSTGRES_PASSWORD: 123
    ports:
      - "5433:5432"
    networks:
      - my-network

  estoque:
    build: .
    env_file: .env
    command: "bundle exec rails s -p 3000 -b '0.0.0.0'"
    environment:
      DB_HOST: db
      DB_NAME: microservico_estoque_development
      DB_USERNAME: vinicius 
      DB_PASSWORD: 123
    volumes:
      - .:/app:cached
    ports:
      - "3000:3000"
    depends_on:
      - db
    networks:
      - my-network
  

  estoque2:
    build: .
    env_file: .env
    command: "bundle exec rails s -p 3001 -b '0.0.0.0'"
    environment:
      DB_HOST: db
      DB_NAME: microservico_estoque_development
      DB_USERNAME: vinicius 
      DB_PASSWORD: 123
    volumes:
      - .:/app:cached
    ports:
      - "3001:3000"
    depends_on:
      - db
    networks:
      - my-network


  estoque3:
    build: .
    env_file: .env
    command: "bundle exec rails s -p 3002 -b '0.0.0.0'"
    environment:
      DB_HOST: db
      DB_NAME: microservico_estoque_development
      DB_USERNAME: vinicius 
      DB_PASSWORD: 123
    volumes:
      - .:/app:cached
    ports:
      - "3002:3000"
    depends_on:
      - db
    networks:
      - my-network

volumes:
  postgres_data:

networks:
  my-network:
    driver: bridge
