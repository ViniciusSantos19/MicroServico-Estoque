events {
    worker_connections 1024;
}

http {
    upstream estoques_api_server {
        server estoque:3000 max_fails=3 fail_timeout=30s;
        server estoque2:3001 max_fails=3 fail_timeout=30s;
        server estoque3:3002 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name localhost;

        # Redirecionar HTTP para HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/estoque.crt;
        ssl_certificate_key /etc/nginx/ssl/estoque.key;

        # Configurações adicionais de SSL
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;

        # Opcional: Adicionar HSTS para forçar HTTPS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location /estoque/ {
            proxy_pass http://estoques_api_server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            rewrite ^/estoque/(.*)$ /$1 break;
        }
    }
}
